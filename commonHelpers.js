import{S,a as q,i as f}from"./assets/vendor-6e0bf343.js";(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function c(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();function m(t){return t.map(({webformatURL:a,largeImageURL:s,tags:c,likes:e,views:r,comments:i,downloads:w})=>`
        <li class="item-card">
        <a class="gallery-link" href="${s}">
            <img class="result-icon" src="${a}" alt="${c}" data-largeImage="${s}" >
            </a>
            <div class="info">
            <div><p class="likes">Likes <div>${e}</div></p></div>
            <div><p class="views">Views <div>${r}</div></p></div>
            <div><p class="comments">Comments <div>${i}</div></p></div>
            <div><p class="downloads">Downloads <div>${w}<div></p></div>
            </div>
        </li>
    `).join("")}const p=new S(".item-card a",{captionsData:"alt"}),y="https://pixabay.com/api/",M="43338805-0211d3d1e83cb5c165622303b";let $,d={key:M,q:$,image_type:"photo",orientation:"horizontal",safesearch:!0,page:1,per_page:15};async function g(t,a={}){return await q(t,{params:a})}function P(t){d.q=t}function v(t){d.page=t}let n=1,L=15;const b=document.querySelector(".js-search-form"),l=document.querySelector(".gallery"),u=document.querySelector(".loader"),h=document.querySelector(".loader-1"),o=document.querySelector(".load-more");b.addEventListener("submit",H);o.addEventListener("click",O);async function H(t){t.preventDefault();const a=t.target.elements.search.value;if(a){l.innerHTML="",u.classList.remove("is-hidden"),P(a),v(1);try{const{data:s}=await g(y,d);if(!s.hits.length){f.show({message:"Sorry, there are no images matching your search query. Please try again!",color:"red",position:"topRight"});return}b.reset(),n<s.totalHits/L&&o.classList.remove("is-hidden"),l.insertAdjacentHTML("beforeend",m([...s.hits])),p.refresh()}catch(s){alert(s)}finally{u.classList.add("is-hidden")}}}async function O(){n+=1,o.disabled=!0,v(n),h.classList.remove("is-hidden");try{const{data:t}=await g(y,d);l.insertAdjacentHTML("beforeend",m([...t.hits])),p.refresh(),o.disabled=!1;const s=document.querySelector(".item-card").getBoundingClientRect().height;window.scrollBy({left:0,top:s*2,behavior:"smooth"}),n>=Math.ceil(t.totalHits/L)&&(o.classList.add("is-hidden"),f.show({message:"We're sorry, but you've reached the end of search results.",color:"red",position:"topRight"}))}catch(t){alert(t.message)}finally{h.classList.add("is-hidden")}}
//# sourceMappingURL=commonHelpers.js.map
